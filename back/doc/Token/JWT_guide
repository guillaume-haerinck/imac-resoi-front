		=> Le JSON Web Token est le système qui nous permet sur le site de s'assurer que l'utisateur qui émet un requête est bien celui que l'on crois et qu'il a bien le droit d'effectuer cette action sur le site.

		=> Pour obtenir un token d'authentification, l'utilisateur doit s'authentifier (via l'api : POST http://nom_domaine.fr/api/user/auth avec "pseudo" et "mot_de_passe" en JSON dans le corps).
		=> Si l'utilisateur avec ce pseudo/mdp existe, un token lui est renvoyé (en JSON, au libellé "jwt"). Ce token sera valide pendant 3 heures à compter de l'authentification.
		=> L'utilisateur peut ensuite faire les requêtes qu'il souhaite sur le site en mettant son token dans le header de sa requête, sous le libellé "Authorization" et précéder de la mention "Bearer " (dans postman, aller dans l'onglet "Autorisation", dans type, choisir "Bearer Token" et renseigner son token dans le champ "Token").
		=> Si l'utilisateur dispose des droits pour effectuer la requête, celle-ci ce fera sans problème, sinon une erreur lui sera retourné.
		=> Si un token est utilisé après son expiration (3 heures), une heure avec un code spécifique lui sera retourné.

		=> Coté back, trois fonctionnalités ont été implémenter pour vérifier le niveau d'autirisation d'un utilisateur (méthode implémenter dans le fichier controllers/scans/TokenAccess.php :
				=> adminAccess : prend un niveau d'accès en paramètre, vérifier que l'utilisateur dispose d'un niveau d'accès (à l'échelle du site) au moins équivalent à celui spécifié en paramètre (le niveau d'accès d'un user est déterminer par son champ status dans la bdd. Les niveaux actuels sont 1 pour super-administateur, 2 pour modérateur, 3 pour membre. Plus un niveau est proche de 0, plus les autorisations sur le site son important.) 
				=> acompteAccess : prend un id utilisateur en paramètre, vérifie que l'utilisateur qui fait la requête a bien pour id celui spécifié en paramètre. Permet de règlementé les actions lié en un compte utilisateur spécifique.
				=> moduleAccess : prend un id d'event puis un id de module en paramètre, vérifie que l'utilisateur qui fait la requête a bien le droit d'agir sur le module spécifié en paramètre pour l'event également donné en paramètre.
